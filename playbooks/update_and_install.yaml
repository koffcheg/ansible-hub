---
# playbooks/update_and_install.yaml
- name: Rotate and upload VPN config for each selected client
  hosts: vpn
  gather_facts: false
  become: true

  pre_tasks:
    - name: Ensure client_names is passed
      assert:
        that:
          - client_names is defined
          - client_names | length > 0

    - name: Load controller variables
      import_tasks: ../tasks/load_controller_vars.yaml

    - name: Define dynamic host group for installation
      add_host:
        name: "{{ item }}"
        groups: selected_clients
      loop: "{{ client_names }}"

  tasks:
    - name: Rotate cert and upload archive per client
      include_tasks: tasks/rotate_per_client.yaml
      loop: "{{ client_names }}"
      loop_control:
        loop_var: client_name


- name: Install and restart VPN for selected clients
  hosts: selected_clients
  gather_facts: false
  become: true

  vars:
    ansible_user: kaki
    ansible_ssh_pass: kaki

  pre_tasks:
    - name: Load controller vars again
      import_tasks: ../tasks/load_controller_vars.yaml

    - name: Set fallback for client_name
      set_fact:
        client_name: "{{ inventory_hostname }}"

  tasks:
    - name: Read client metadata
      include_role:
        name: vpn_client
        tasks_from: read_meta

    - name: Install VPN config and restart if needed
      when: not client_meta.installed or client_meta.version != client_meta.latest
      block:
        - name: Install from secret
          include_role:
            name: vpn_client
            tasks_from: install_remote

        - name: Mark install complete
          include_role:
            name: vpn_client
            tasks_from: mark_installed

        - name: Revoke pending cert if needed
          include_role:
            name: vpn_cert
            tasks_from: revoke_pending