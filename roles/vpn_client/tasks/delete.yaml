---
# roles/vpn_client/tasks/delete.yaml
- name: Activate GCP service account
  import_tasks: "{{ playbook_dir }}/../tasks/activate_gcp_account.yaml"
  delegate_to: localhost
  run_once: true

- name: Delete GCP Secret (if exists)
  delegate_to: localhost
  shell: |
    if gcloud secrets describe {{ gcp_secrets_prefix }}{{ client_name }} --project={{ gcp_project_id }} 2>/dev/null; then
      gcloud secrets delete {{ gcp_secrets_prefix }}{{ client_name }} --quiet --project={{ gcp_project_id }}
    else
      echo "Secret not found: {{ gcp_secrets_prefix }}{{ client_name }}"
    fi
  register: delete_gcp_secret_result
  changed_when: "'Deleted secret' in delete_gcp_secret_result.stdout"
  args:
    executable: /bin/bash

- name: Delete local client config dir on controller
  delegate_to: localhost
  file:
    path: "{{ client_configs_base_dir }}/{{ client_name }}"
    state: absent
  register: local_cleanup_result

- name: Confirm local cleanup
  debug:
    msg: "Deleted local files at {{ client_configs_base_dir }}/{{ client_name }}"
  when: local_cleanup_result.changed

- name: Delete client cert from EasyRSA
  file:
    path: "{{ easy_rsa_dir }}/pki/issued/{{ client_name }}.crt"
    state: absent

- name: Delete client key from EasyRSA
  file:
    path: "{{ easy_rsa_dir }}/pki/private/{{ client_name }}.key"
    state: absent

- name: Delete client request file
  file:
    path: "{{ easy_rsa_dir }}/pki/reqs/{{ client_name }}.req"
    state: absent

- name: Delete CCD static IP assignment
  file:
    path: "/etc/openvpn/ccd/{{ client_name }}"
    state: absent